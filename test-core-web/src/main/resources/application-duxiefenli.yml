sharding:
  jdbc:
    datasource:
      names: master,slave0,slave1
      # 数据源master
      master:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://localhost:3306/ds0?characterEncoding=UTF-8&allowMultiQueries=true&serverTimezone=UTC
        username: root
        password: q1w2e3r4
      # 数据源slave0
      slave0:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://localhost:3307/ds0?characterEncoding=UTF-8&allowMultiQueries=true&serverTimezone=UTC
        username: root
        password: q1w2e3r4

      # 数据源slave1
      slave1:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://localhost:3308/ds0?characterEncoding=UTF-8&allowMultiQueries=true&serverTimezone=UTC
        username: root
        password: q1w2e3r4

    # 配置读写分离
    config:
      masterslave:
        name: ms
        # 主数据源名称
        master-data-source-name: master
        # 从数据源名称，多个用逗号隔开
        slave-data-source-names: slave0,slave1
        # 配置从库选择策略，提供轮询与随机，这里选择用轮询//random 随机 //round_robin 轮询
        load-balance-algorithm-type: round_robin

    # 开启SQL显示，默认值: false，注意：仅配置读写分离时不会打印日志！！！
    props:
      sql:
        show: true

          # 主从配置设计到的操作
          # 1.修改my.ini文件，新增 server-id = 2; log-bin=mysqld-bin; replicate-do-db=ds0; replicate-do-db=ds1;
          # 2.每次更新my.ini文件都需要重启数据库，net stop MySQL ;net start MySQL
          # 3.通过show master status;查看主库信息
          # 4.主库新增一个用户，用户名:slave，密码：q1w2e3r4。用来关联主从同步的操作
          # 5.从库绑定主库的操作用户
          # 1.stop slave;
          # 2.change master to master_host='127.0.0.1', master_user='slave', master_password='q1w2e3r4',master_log_file='mysql-bin.000013', master_log_pos=154;
        # 3.show slave status;查看Slave_IO_Running和Slave_SQL_Running的状态是否都是yes，若都为yes则表示配置成功
